name: vcpkg test - combined

on: [pull_request]

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            cc: cl.exe
            cxx: cl.exe
          - os: ubuntu-16.04
            cc: gcc-9
            cxx: g++-9
          - os: ubuntu-16.04
            cc: clang-9
            cxx: clang++-9
    runs-on: ${{ matrix.os }}
    env:
      USE_VCPKG: ON
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Setup VsDev environment
        if: runner.os == 'Windows'
        uses: seanmiddleditch/gha-setup-vsdevenv@master

      - name: apt
        if: runner.os == 'Linux'
        run: sudo apt install ninja-build libwayland-dev libxrandr-dev

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
          architecture: x64

      - name: toml
        run: pip3 install toml

      - name: Get software versions please
        run: |
          cmake --version
          git --version
          python --version
          if [ "$CXX" == "cl.exe" ]; then
            $CXX
          else
              $CXX --version
          fi

      - name: setup environment vars
        run: |
             echo "Python3_EXECUTABLE=$(which python)" >> $GITHUB_ENV
             mkdir builddir

      - name: cache -- vcpkg, builddir/vcpkg_installed
        uses: actions/cache@v2
        with:
          path: |
            vcpkg
            !vcpkg/buildtrees
            !vcpkg/downloads
            !vcpkg/packages
            builddir/vcpkg_installed
          key: ${{ matrix.os }}-${{ matrix.cc }}-${{ github.head_ref }}-builddir-vcpkg-manifestmode
          restore-keys: ${{ matrix.os }}-${{ github.head_ref }}-builddir-vcpkg-manifestmode
          #restore-keys: ${{ github.head_ref }}-builddir-vcpkg

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     limit-access-to-actor: true

      - name: Configure
        run: |
          cmake -GNinja -S. -B./builddir -DCMAKE_BUILD_TYPE=Release

      - name: Generate
        run: |
          ninja -C builddir \
            types/assets/MaterialAsset_generated.h \
            types/assets/MeshAsset_generated.h \
            types/assets/PrefabAsset_generated.h \
            types/assets/Registry_generated.h \
            types/assets/ScriptAsset_generated.h \
            types/assets/SerializedAsset_generated.h \
            types/assets/TextureAsset_generated.h \
            types/assets/types_generated.h \
            types/protocol/ClientEvent_generated.h \
            types/protocol/MeshRendererComponent_generated.h \
            types/protocol/PointLightComponent_generated.h \
            types/protocol/ScriptData_generated.h \
            types/protocol/ServerEvent_generated.h \
            types/protocol/TransformComponent_generated.h \
            types/protocol/types_generated.h \
            types/protocol/WorldEvent_generated.h

      - name: Build
        run: |
          ninja -C builddir

      - name: Verify
        run: |
          ls -lrth builddir/client
          ./builddir/client/mondradiko-client --version || true
          ls -lrth builddir/server
          ./builddir/server/mondradiko-server --version || true
          ls -lrth builddir/bundler
          ./builddir/bundler/mondradiko-bundler --version || true
